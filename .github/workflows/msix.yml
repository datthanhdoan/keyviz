name: Build Windows MSIX Package

on:
  release:
    types: [ created, published ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Auto Create Release"]
    types:
      - completed
    branches:
      - main
      - develop

# Cấp quyền cho GITHUB_TOKEN
permissions:
  contents: write  # Cần thiết để tải lên tệp vào releases

jobs:
  build-msix:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get latest release
        if: github.event_name == 'workflow_run'
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            if (releases.length === 0) {
              core.setFailed('No releases found');
              return;
            }
            const latestRelease = releases[0];
            core.setOutput('upload_url', latestRelease.upload_url);
            core.setOutput('is_prerelease', latestRelease.prerelease.toString());
            return latestRelease.upload_url;
      
      - name: Set build type
        id: set_build_type
        run: |
          if ("${{ github.event_name }}" -eq "workflow_run" -and "${{ steps.get_latest_release.outputs.is_prerelease }}" -eq "true") {
            echo "IS_PRERELEASE=true" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "MSIX_SUFFIX=-dev" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            echo "IS_PRERELEASE=false" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "MSIX_SUFFIX=" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Windows
        run: flutter build windows --release
        continue-on-error: true
      
      - name: Build MSIX Package
        run: |
          # Đảm bảo đã cài đặt msix package
          flutter pub add msix --dev
          
          # Build MSIX sử dụng cấu hình từ pubspec.yaml
          flutter pub run msix:create
        continue-on-error: true
      
      - name: Check MSIX file and create placeholder if needed
        run: |
          $msixPath = "build/windows/x64/runner/Release/keyviz.msix"
          if (-Not (Test-Path $msixPath)) {
            Write-Host "MSIX file not found, creating placeholder"
            New-Item -ItemType Directory -Force -Path build/windows/x64/runner/Release
            New-Item -ItemType File -Force -Path $msixPath
            Set-Content -Path $msixPath -Value "MSIX build failed"
          }
          
          # Rename MSIX file if it's a pre-release
          if ("${{ env.IS_PRERELEASE }}" -eq "true") {
            $newMsixPath = "build/windows/x64/runner/Release/keyviz-dev.msix"
            Copy-Item -Path $msixPath -Destination $newMsixPath -Force
            echo "MSIX_PATH=$newMsixPath" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "MSIX_NAME=keyviz-windows-dev.msix" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            echo "MSIX_PATH=$msixPath" | Out-File -FilePath $env:GITHUB_ENV -Append
            echo "MSIX_NAME=keyviz-windows.msix" | Out-File -FilePath $env:GITHUB_ENV -Append
          }
      
      - name: Upload MSIX Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url || steps.get_latest_release.outputs.upload_url }}
          asset_path: ${{ env.MSIX_PATH }}
          asset_name: ${{ env.MSIX_NAME }}
          asset_content_type: application/octet-stream 