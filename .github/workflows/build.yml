name: Build KeyViz

on:
  release:
    types: [ created, published ]
  workflow_dispatch:
  workflow_run:
    workflows: ["Auto Create Release"]
    types:
      - completed
    branches:
      - main

# Cấp quyền cho GITHUB_TOKEN
permissions:
  contents: write  # Cần thiết để tải lên tệp vào releases

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get latest release
        if: github.event_name == 'workflow_run'
        id: get_latest_release
        uses: actions/github-script@v6
        with:
          script: |
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            if (releases.length === 0) {
              core.setFailed('No releases found');
              return;
            }
            const latestRelease = releases[0];
            core.setOutput('upload_url', latestRelease.upload_url);
            return latestRelease.upload_url;
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Windows
        run: flutter build windows --release
        continue-on-error: true
      
      - name: Create Windows ZIP
        run: |
          if (Test-Path "build/windows/x64/runner/Release") {
            Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath keyviz-windows.zip
          } else {
            Write-Host "Build directory not found, creating empty zip"
            New-Item -ItemType Directory -Force -Path build/windows/x64/runner/Release
            New-Item -ItemType File -Force -Path build/windows/x64/runner/Release/placeholder.txt
            Set-Content -Path build/windows/x64/runner/Release/placeholder.txt -Value "Build failed"
            Compress-Archive -Path build/windows/x64/runner/Release/* -DestinationPath keyviz-windows.zip
          }
      
      - name: Upload Windows Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url || steps.get_latest_release.outputs.upload_url }}
          asset_path: ./keyviz-windows.zip
          asset_name: keyviz-windows.zip
          asset_content_type: application/zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build macOS
        run: flutter build macos --release
        continue-on-error: true
      
      - name: Create macOS DMG
        run: |
          if [ -d "build/macos/Build/Products/Release" ]; then
            cd build/macos/Build/Products/Release
            mkdir -p dmg
            cp -r keyviz.app dmg/ || echo "App not found, creating placeholder"
            if [ ! -d "dmg/keyviz.app" ]; then
              echo "Build failed" > dmg/placeholder.txt
            fi
            hdiutil create -volname "KeyViz" -srcfolder dmg -ov -format UDZO keyviz-macos.dmg
            mv keyviz-macos.dmg ../../../../../
          else
            mkdir -p build/macos/Build/Products/Release/dmg
            echo "Build failed" > build/macos/Build/Products/Release/dmg/placeholder.txt
            cd build/macos/Build/Products/Release
            hdiutil create -volname "KeyViz" -srcfolder dmg -ov -format UDZO keyviz-macos.dmg
            mv keyviz-macos.dmg ../../../../../
          fi
      
      - name: Upload macOS Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./keyviz-macos.dmg
          asset_name: keyviz-macos.dmg
          asset_content_type: application/octet-stream

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev libayatana-appindicator3-dev
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build Linux
        run: flutter build linux --release
        continue-on-error: true
      
      - name: Create Linux TAR
        run: |
          if [ -d "build/linux/x64/release/bundle" ]; then
            cd build/linux/x64/release/bundle
            tar -czvf ../../../../../keyviz-linux.tar.gz .
          else
            mkdir -p build/linux/x64/release/bundle
            echo "Build failed" > build/linux/x64/release/bundle/placeholder.txt
            cd build/linux/x64/release/bundle
            tar -czvf ../../../../../keyviz-linux.tar.gz .
          fi
      
      - name: Upload Linux Artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./keyviz-linux.tar.gz
          asset_name: keyviz-linux.tar.gz
          asset_content_type: application/gzip 